/*******************************************************************************************
 * 
 * Module Name	: rm-queue
 * 
 * Description	: To Establish Connection to RabbitMQ using amqp Module.
 * 
 * Author(s)	: Abinesh S.
 * 
 * Date			: 2015/12/09		
 * 
 * Version		: Initial Version
 * 
 ******************************************************************************************/

var MODULE = "rm-queue";

/*******************************************************************************************
 * Required Module(s)
 ******************************************************************************************/

var amqp = require('amqp');

/*******************************************************************************************
 * Global Variables
 ******************************************************************************************/

var amqpConnection = null;

/*******************************************************************************************
 * Class
 ******************************************************************************************/

var Q = {};

/*******************************************************************************************
 * Queue - Connection Establishment
 ******************************************************************************************/

Q.connect = function (config) {
	
	try {
		
		amqpConnection = amqp.createConnection(config);
	
		console.log ("\nRabbit MQ Connected to [HOST : " + config.host + "] [PORT : " + config.port + "] and Listening ...");
	
	} 
	catch (err) {
		console.log('Error @ [' + MODULE + '] Connecting RabbitMQ : ' + err);
	}
	
	return amqpConnection;
};

/*******************************************************************************************
 * To Subscribe a Queue and Direct it to a Callback function 
 ******************************************************************************************/
Q.sub = function (qName, qHandler) {
	try {
		//TODO -- params should be passed dynamically 
		amqpConnection.queue (qName,{durable:true,autoDelete:false}, function(q) {
			q.bind('#');
			
			q.subscribe({ ack: true, prefetchCount: 1 }, function(msg) {
				// q.shift();
				qHandler(msg, q);
			});
		});
		
	}catch(err){
		console.log('Exception handled @ [' + MODULE + ']  in sub : '+ err.stack );	
	}
};

/*******************************************************************************************
 * To Publish Message to Queue
 ******************************************************************************************/

Q.pub = function (qName, msg) {
	try{
		amqpConnection.publish(qName, msg);
		
	}catch(err){
		console.log('Exception handled @ [' + MODULE + ']  in pub : '+ err.stack );	
	}
};
module.exports = exports = Q;