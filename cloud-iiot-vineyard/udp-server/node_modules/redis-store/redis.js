var MODULE = "redis-store";


/*******************************************************************************************
 * Required Module(s)
 ******************************************************************************************/

var redis = require('redis');
var colors = require('colors');

/*******************************************************************************************
 * Class
 ******************************************************************************************/

var tredis = function(ip, port){

    this.ip = ip;
    this.port = port;
    this.client = null;


};
module.exports = tredis;




// Initialize redis client
tredis.prototype.init = function(){

    var self = this;

    self.client = redis.createClient(this.port, this.ip);

    if(self.client){
        self.client.on('connect', function() {
            var log = new Date() + " | Redis Client Connected with ["+self.ip + ":" + self.port +"]";
            console.log(log.green);
        });
    }
    else{
        var log = new Date() + " | Redis Client Not Connected. Something Went Wrong / Redis Server Not Started";
        console.log(log.red);
    }



};


// Set Key Value

tredis.prototype.set = function(key, value, expireTime, cbk){

    var self = this;

    self.client.set(key, JSON.stringify(value), function(err, result) {

        if(expireTime){

            var log = new Date() + " | "+key+" Key Stored & set with expiry time "+expireTime+ " Seconds";

            console.log(log.green);

            self.client.expire(key, expireTime);

        }else{

            var log = new Date() + " | "+key+" Key Stored";
            console.log(log.green);

        }

        cbk(err, result);

    });
};



// Get Key Value

tredis.prototype.get = function(key, cbk){

    var self = this;

    self.client.get(key, function(err, result) {

        cbk(err, JSON.parse(result));

    });
};


// Remove Key Value

tredis.prototype.remove = function(key, cbk){

    var self = this;

    self.client.del(key, function(err, result) {

        var log = new Date() + " | "+key+" Key removed.";

        console.log(log.red);

        cbk(err, result);
    });
};



// Set Key TTL

tredis.prototype.expire = function(key, expireTime){

    var self = this;

    self.client.expire(key, expireTime);

    var log = new Date() + " | "+key+" Key set with expiry time "+expireTime+ " Seconds";

    console.log(log.green);

};


// Check Key exists or not

tredis.prototype.exists = function(key, cbk){

    var self = this;

    self.client.exists(key, function(err, reply) {

        if (reply === 1) {

            cbk(err, true);

        } else {

            cbk(err, false);
        }

    });

};

