
/*******************************************************************************************
 * Variable
 ******************************************************************************************/
var root_path = __dirname;

/*******************************************************************************************
 * Required module
 ******************************************************************************************/
//var conf = require('./conf.js');

/*******************************************************************************************
 * Required libs
 ******************************************************************************************/
//var tode = require('tode');

/*******************************************************************************************
 * HTTP Server Startup
 ******************************************************************************************/
//var http = {};
//var app = {};
//
//try {
//
//    http = tode.HTTP;
//    http_conf = conf['web'];
////    http_conf['views'].path = views_path;
//    http_conf['static'].path = root_path;
//    http_conf['sessioStore'] = conf['sessio-store'];
//    app = http.start (http_conf);
//
//    app.sessionCheck = http.sessionCheck;
//    app.express = http.express;
//
//
//
//}
//catch(err) {
//    console.log('Error @ HTTP Server Initialization : ' + err);
//}
var message = "0005020000000D0C2020202020203031323630353030313139333833302091DF02994B013BD3F7FF88F53401A30570014BC20A03B309FE0F031108311E";
var specArray = [{field: "apiVersion",
    index: 0,
    expression: null,
    LEorBE : "BE",
    type : "smallInt",
    signed : false,
    count: 2},
    {field: "messageType",
        index: 2,
        expression: null,
        LEorBE : "BE",
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "optHdrSize",
        index: 3,
        expression: null,
        LEorBE : "BE",
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "eventId",
        index: 4,
        expression: null,
        LEorBE : "BE",
        type : "integer",
        signed : false,
        count: 4},
    {field: "deviceId",
        index: 8,
        expression: function(input){
            return (input.trim())},
        LEorBE : "BE",
        type : "string",
        signed : false,
        count: 22},
    {field: "gpio",
        index: 30,
        expression: null,
        LEorBE : "BE",
        type : "smallInt",
        signed : false,
        count: 2},
    {field: "date",
        index: 32,
        expression: null,
        LEorBE : "BE",
        type : "byte3",
        signed : false,
        count: 3},
    {field: "validGps",
        index: 35,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "latitudeDecoded",
        index : 36,
        expression:function(input){
            var dd =  Math.round(input/100000);
            var mmsss =  (input%100000)/1000;
            return dd + (mmsss/60)},
        type : "byte3",
        LEorBE : "BE",
        signed : true,
        count: 3},
    {field: "longitudeDecoded",
        index : 39,
        expression: function(input){
            var dd =  Math.round(input/100000);
            var mmsss =  (input%100000)/1000;
            return dd + (mmsss/60)},
        LEorBE : "BE",
        type : "integer",
        signed : true,
        count: 4},
    {field: "speed",
        index: 43,
        expression: function(input){
            return (input * 0.115155)},
        type : "smallInt",
        LEorBE : "BE",
        signed : false,
        count: 2},
    {field: "heading",
        index: 45,
        expression: null,
        type : "smallInt",
        signed : false,
        LEorBE : "BE",
        count: 2},
    {field: "time",
        index: 47,
        expression: null,
        type : "byte3",
        LEorBE : "BE",
        signed : false,
        count: 3},
//    {field: "altitude",
//        index: 50,
//        expression: null,
//        type : "byte3",
//        LEorBE : "BE",
//        signed : false,
//        count: 3},
    {field: "satellietes",
        index: 50,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "odometer",
        index: 54,
        expression: null,
        type : "integer",
        signed : false,
        LEorBE : "BE",
        count: 4},
    {field: "rtcYear",
        index: 55,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "rtcMonth",
        index: 56,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "rtcDay",
        index: 57,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "rtcHour",
        index: 58,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "rtcMinutes",
        index: 59,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1},
    {field: "rtcSeconds",
        index: 60,
        expression: null,
        type : "byteInt",
        signed : false,
        count: 1}
];
var spec = {
    msgType : "hex",
    protocol : 'udp',
    device : 'Enfora',
    specArray : specArray
};

var MessageProcessor = require('../index.js');
var messageProcessor = new MessageProcessor();
messageProcessor.init(message,spec,function(result){
    console.log("************RESULT********************");
    console.log(result);
    console.log("************RESULT********************");
    console.log("success")
});



